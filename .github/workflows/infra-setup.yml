name: Infra setup

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: false
        default: 'main'

jobs:
  bootstrap:
    if: github.actor == 'lvkheen'
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout (–¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ secrets)
        uses: actions/checkout@v4

      - name: üõ†Ô∏è Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: ‚öôÔ∏è Bootstrap VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_IP }} "
            set -e

            echo 'üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker —á–µ—Ä–µ–∑ get.docker.com...'
            curl -fsSL https://get.docker.com | sh

            echo 'üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Docker-—Å–µ—Ä–≤–∏—Å–∞...'
            sudo systemctl restart docker

            echo 'üïí –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Docker...'
            for i in {1..10}; do
              if sudo docker info >/dev/null 2>&1; then
                echo '‚úÖ Docker –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.'
                break
              fi
              echo '‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Docker (\$i)...'
              sleep 2
              if [ \"\$i\" -eq 10 ]; then
                echo '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Docker.'
                exit 1
              fi
            done

            echo 'üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...'
            sudo mkdir -p /opt/data/db /opt/data/redis /opt/data/portainer /opt/infra
            sudo chown -R \$USER:\$USER /opt

            if [ ! -d /opt/infra/.git ]; then
              echo 'üîÑ –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ infra...'
              git clone --branch ${{ github.event.inputs.branch }} https://github.com/${{ github.repository }} /opt/infra
            else
              echo 'üîÅ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ infra...'
              cd /opt/infra && git pull origin ${{ github.event.inputs.branch }}
            fi

            cd /opt/infra
          
            echo 'üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ Portainer –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...'
            PORTAINER_CHANGED=false
          
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ docker-compose.yml –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞ portainer
            if git diff HEAD~1 HEAD --name-only | grep -q 'docker-compose.yml'; then
              if git diff HEAD~1 HEAD docker-compose.yml | grep -A 20 -B 5 'portainer:' | grep -q '^[+-]'; then
                echo 'üìù –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Portainer'
                PORTAINER_CHANGED=true
              fi
            fi
          
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ workflow —Ñ–∞–π–ª–µ
            if git diff HEAD~1 HEAD --name-only | grep -q '.github/workflows/infra-setup.yml'; then
              if git diff HEAD~1 HEAD .github/workflows/infra-setup.yml | grep -q 'PORTAINER'; then
                echo 'üìù –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Portainer –≤ workflow'
                PORTAINER_CHANGED=true
              fi
            fi
          
            # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
            if [ \"\$PORTAINER_CHANGED\" = true ]; then
              echo 'üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö Portainer –∏–∑-–∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π...'
              sudo rm -rf /opt/data/portainer/*
            else
              echo '‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏–π –≤ Portainer –Ω–µ—Ç, –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è'
            fi

            echo 'üì• –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤...'
            sudo PORTAINER_USERNAME=\"${{ secrets.PORTAINER_USERNAME }}\" PORTAINER_PASSWORD_HASH=\"${{ secrets.PORTAINER_PASSWORD_HASH }}\" docker compose pull

            echo 'üöÄ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω—ë–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤...'
            sudo PORTAINER_USERNAME=\"${{ secrets.PORTAINER_USERNAME }}\" PORTAINER_PASSWORD_HASH=\"${{ secrets.PORTAINER_PASSWORD_HASH }}\" docker compose up -d --remove-orphans

            echo '‚úÖ –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–∞.'
          "